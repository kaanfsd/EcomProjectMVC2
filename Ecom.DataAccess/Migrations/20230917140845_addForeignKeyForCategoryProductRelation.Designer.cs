// <auto-generated />
using EcomProjectMVC.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcomProjectMVC.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230917140845_addForeignKeyForCategoryProductRelation")]
    partial class addForeignKeyForCategoryProductRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.1.23419.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecom.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("Ecom.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = "SMP12345",
                            CategoryId = 13,
                            Description = "High-performance smartphone with 6.4-inch display.",
                            ListPrice = 500.0,
                            Manufacturer = "Samsung",
                            Price = 450.0,
                            Price100 = 400.0,
                            Price50 = 430.0,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = 2,
                            Barcode = "LTPT67890",
                            CategoryId = 13,
                            Description = "Thin and light laptop with Intel Core i7 processor.",
                            ListPrice = 1100.0,
                            Manufacturer = "Dell",
                            Price = 1000.0,
                            Price100 = 900.0,
                            Price50 = 950.0,
                            Title = "Laptop"
                        },
                        new
                        {
                            Id = 3,
                            Barcode = "TV1234",
                            CategoryId = 13,
                            Description = "55-inch 4K Ultra HD Smart LED TV with HDR.",
                            ListPrice = 800.0,
                            Manufacturer = "Sony",
                            Price = 700.0,
                            Price100 = 600.0,
                            Price50 = 650.0,
                            Title = "LED TV"
                        },
                        new
                        {
                            Id = 4,
                            Barcode = "EB5678",
                            CategoryId = 13,
                            Description = "Bluetooth wireless earbuds with noise cancellation.",
                            ListPrice = 200.0,
                            Manufacturer = "Apple",
                            Price = 180.0,
                            Price100 = 160.0,
                            Price50 = 170.0,
                            Title = "Wireless Earbuds"
                        },
                        new
                        {
                            Id = 5,
                            Barcode = "CAM4567",
                            CategoryId = 13,
                            Description = "20MP digital camera with 3-inch LCD screen.",
                            ListPrice = 300.0,
                            Manufacturer = "Canon",
                            Price = 250.0,
                            Price100 = 230.0,
                            Price50 = 240.0,
                            Title = "Digital Camera"
                        },
                        new
                        {
                            Id = 6,
                            Barcode = "CM7890",
                            CategoryId = 13,
                            Description = "Programmable coffee maker with built-in grinder.",
                            ListPrice = 130.0,
                            Manufacturer = "Breville",
                            Price = 110.0,
                            Price100 = 90.0,
                            Price50 = 100.0,
                            Title = "Coffee Maker"
                        },
                        new
                        {
                            Id = 7,
                            Barcode = "FIT123",
                            CategoryId = 13,
                            Description = "Waterproof fitness tracker with heart rate monitor.",
                            ListPrice = 80.0,
                            Manufacturer = "Fitbit",
                            Price = 70.0,
                            Price100 = 60.0,
                            Price50 = 65.0,
                            Title = "Fitness Tracker"
                        },
                        new
                        {
                            Id = 8,
                            Barcode = "BP5678",
                            CategoryId = 13,
                            Description = "Durable backpack with multiple compartments.",
                            ListPrice = 60.0,
                            Manufacturer = "North Face",
                            Price = 50.0,
                            Price100 = 45.0,
                            Price50 = 48.0,
                            Title = "Backpack"
                        },
                        new
                        {
                            Id = 9,
                            Barcode = "CHAIR999",
                            CategoryId = 13,
                            Description = "Ergonomic office chair with lumbar support.",
                            ListPrice = 400.0,
                            Manufacturer = "Herman Miller",
                            Price = 350.0,
                            Price100 = 300.0,
                            Price50 = 330.0,
                            Title = "Desk Chair"
                        },
                        new
                        {
                            Id = 10,
                            Barcode = "SNK1234",
                            CategoryId = 13,
                            Description = "Running sneakers with cushioned soles.",
                            ListPrice = 130.0,
                            Manufacturer = "Nike",
                            Price = 120.0,
                            Price100 = 100.0,
                            Price50 = 110.0,
                            Title = "Sneakers"
                        });
                });

            modelBuilder.Entity("Ecom.Models.Product", b =>
                {
                    b.HasOne("Ecom.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
